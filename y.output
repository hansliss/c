

Terminals which are not used:

   CHAR


Conflict in state 16 between rule 18 and token OR resolved as reduce.
Conflict in state 16 between rule 18 and token AND resolved as reduce.
Conflict in state 16 between rule 18 and token '<' resolved as reduce.
Conflict in state 16 between rule 18 and token '>' resolved as reduce.
Conflict in state 16 between rule 18 and token '=' resolved as reduce.
Conflict in state 16 between rule 18 and token '+' resolved as reduce.
Conflict in state 16 between rule 18 and token '-' resolved as reduce.
Conflict in state 16 between rule 18 and token '*' resolved as reduce.
Conflict in state 16 between rule 18 and token '/' resolved as reduce.
Conflict in state 17 between rule 19 and token OR resolved as reduce.
Conflict in state 17 between rule 19 and token AND resolved as reduce.
Conflict in state 17 between rule 19 and token '<' resolved as reduce.
Conflict in state 17 between rule 19 and token '>' resolved as reduce.
Conflict in state 17 between rule 19 and token '=' resolved as reduce.
Conflict in state 17 between rule 19 and token '+' resolved as reduce.
Conflict in state 17 between rule 19 and token '-' resolved as reduce.
Conflict in state 17 between rule 19 and token '*' resolved as reduce.
Conflict in state 17 between rule 19 and token '/' resolved as reduce.
Conflict in state 29 between rule 21 and token OR resolved as shift.
Conflict in state 29 between rule 21 and token AND resolved as shift.
Conflict in state 29 between rule 21 and token '<' resolved as shift.
Conflict in state 29 between rule 21 and token '>' resolved as shift.
Conflict in state 29 between rule 21 and token '=' resolved as shift.
Conflict in state 29 between rule 21 and token '+' resolved as shift.
Conflict in state 29 between rule 21 and token '-' resolved as shift.
Conflict in state 29 between rule 21 and token '*' resolved as shift.
Conflict in state 29 between rule 21 and token '/' resolved as shift.
Conflict in state 32 between rule 16 and token OR resolved as reduce.
Conflict in state 32 between rule 16 and token AND resolved as reduce.
Conflict in state 32 between rule 16 and token '<' resolved as shift.
Conflict in state 32 between rule 16 and token '>' resolved as shift.
Conflict in state 32 between rule 16 and token '=' resolved as shift.
Conflict in state 32 between rule 16 and token '+' resolved as shift.
Conflict in state 32 between rule 16 and token '-' resolved as shift.
Conflict in state 32 between rule 16 and token '*' resolved as shift.
Conflict in state 32 between rule 16 and token '/' resolved as shift.
Conflict in state 33 between rule 17 and token OR resolved as reduce.
Conflict in state 33 between rule 17 and token AND resolved as reduce.
Conflict in state 33 between rule 17 and token '<' resolved as shift.
Conflict in state 33 between rule 17 and token '>' resolved as shift.
Conflict in state 33 between rule 17 and token '=' resolved as shift.
Conflict in state 33 between rule 17 and token '+' resolved as shift.
Conflict in state 33 between rule 17 and token '-' resolved as shift.
Conflict in state 33 between rule 17 and token '*' resolved as shift.
Conflict in state 33 between rule 17 and token '/' resolved as shift.
Conflict in state 34 between rule 13 and token OR resolved as reduce.
Conflict in state 34 between rule 13 and token AND resolved as reduce.
Conflict in state 34 between rule 13 and token '<' resolved as reduce.
Conflict in state 34 between rule 13 and token '>' resolved as reduce.
Conflict in state 34 between rule 13 and token '=' resolved as shift.
Conflict in state 34 between rule 13 and token '+' resolved as shift.
Conflict in state 34 between rule 13 and token '-' resolved as shift.
Conflict in state 34 between rule 13 and token '*' resolved as shift.
Conflict in state 34 between rule 13 and token '/' resolved as shift.
Conflict in state 35 between rule 14 and token OR resolved as reduce.
Conflict in state 35 between rule 14 and token AND resolved as reduce.
Conflict in state 35 between rule 14 and token '<' resolved as reduce.
Conflict in state 35 between rule 14 and token '>' resolved as reduce.
Conflict in state 35 between rule 14 and token '=' resolved as shift.
Conflict in state 35 between rule 14 and token '+' resolved as shift.
Conflict in state 35 between rule 14 and token '-' resolved as shift.
Conflict in state 35 between rule 14 and token '*' resolved as shift.
Conflict in state 35 between rule 14 and token '/' resolved as shift.
Conflict in state 36 between rule 15 and token OR resolved as reduce.
Conflict in state 36 between rule 15 and token AND resolved as reduce.
Conflict in state 36 between rule 15 and token '<' resolved as reduce.
Conflict in state 36 between rule 15 and token '>' resolved as reduce.
Conflict in state 36 between rule 15 and token '=' resolved as reduce.
Conflict in state 36 between rule 15 and token '+' resolved as shift.
Conflict in state 36 between rule 15 and token '-' resolved as shift.
Conflict in state 36 between rule 15 and token '*' resolved as shift.
Conflict in state 36 between rule 15 and token '/' resolved as shift.
Conflict in state 37 between rule 9 and token OR resolved as reduce.
Conflict in state 37 between rule 9 and token AND resolved as reduce.
Conflict in state 37 between rule 9 and token '<' resolved as reduce.
Conflict in state 37 between rule 9 and token '>' resolved as reduce.
Conflict in state 37 between rule 9 and token '=' resolved as reduce.
Conflict in state 37 between rule 9 and token '+' resolved as reduce.
Conflict in state 37 between rule 9 and token '-' resolved as reduce.
Conflict in state 37 between rule 9 and token '*' resolved as shift.
Conflict in state 37 between rule 9 and token '/' resolved as shift.
Conflict in state 38 between rule 10 and token OR resolved as reduce.
Conflict in state 38 between rule 10 and token AND resolved as reduce.
Conflict in state 38 between rule 10 and token '<' resolved as reduce.
Conflict in state 38 between rule 10 and token '>' resolved as reduce.
Conflict in state 38 between rule 10 and token '=' resolved as reduce.
Conflict in state 38 between rule 10 and token '+' resolved as reduce.
Conflict in state 38 between rule 10 and token '-' resolved as reduce.
Conflict in state 38 between rule 10 and token '*' resolved as shift.
Conflict in state 38 between rule 10 and token '/' resolved as shift.
Conflict in state 39 between rule 11 and token OR resolved as reduce.
Conflict in state 39 between rule 11 and token AND resolved as reduce.
Conflict in state 39 between rule 11 and token '<' resolved as reduce.
Conflict in state 39 between rule 11 and token '>' resolved as reduce.
Conflict in state 39 between rule 11 and token '=' resolved as reduce.
Conflict in state 39 between rule 11 and token '+' resolved as reduce.
Conflict in state 39 between rule 11 and token '-' resolved as reduce.
Conflict in state 39 between rule 11 and token '*' resolved as reduce.
Conflict in state 39 between rule 11 and token '/' resolved as reduce.
Conflict in state 40 between rule 12 and token OR resolved as reduce.
Conflict in state 40 between rule 12 and token AND resolved as reduce.
Conflict in state 40 between rule 12 and token '<' resolved as reduce.
Conflict in state 40 between rule 12 and token '>' resolved as reduce.
Conflict in state 40 between rule 12 and token '=' resolved as reduce.
Conflict in state 40 between rule 12 and token '+' resolved as reduce.
Conflict in state 40 between rule 12 and token '-' resolved as reduce.
Conflict in state 40 between rule 12 and token '*' resolved as reduce.
Conflict in state 40 between rule 12 and token '/' resolved as reduce.

Grammar
rule 1    lines ->		/* empty */
rule 2    lines -> lines stmt
rule 3    stmt -> expr ENDOFLINE
rule 4    stmt -> '?' ENDOFLINE
rule 5    stmt -> error ENDOFLINE
rule 6    expr -> INUM
rule 7    expr -> FUNC '(' expr ')'
rule 8    expr -> ID
rule 9    expr -> expr '+' expr
rule 10   expr -> expr '-' expr
rule 11   expr -> expr '*' expr
rule 12   expr -> expr '/' expr
rule 13   expr -> expr '<' expr
rule 14   expr -> expr '>' expr
rule 15   expr -> expr '=' expr
rule 16   expr -> expr OR expr
rule 17   expr -> expr AND expr
rule 18   expr -> '-' expr
rule 19   expr -> NOT expr
rule 20   expr -> '(' expr ')'
rule 21   expr -> ID ASSIGN expr

Terminals, with rules where they appear

$ (-1)
'(' (40) 7 20
')' (41) 7 20
'*' (42) 11
'+' (43) 9
'-' (45) 10 18
'/' (47) 12
'<' (60) 13
'=' (61) 15
'>' (62) 14
'?' (63) 4
error (256) 5
INUM (257) 6
ID (258) 8 21
FUNC (259) 7
CHAR (260)
ENDOFLINE (261) 3 4 5
ASSIGN (262) 21
OR (263) 16
AND (264) 17
UNARYMINUS (265)
NOT (266) 19

Nonterminals, with rules where they appear

lines (23)
    on left: 1 2, on right: 2
stmt (24)
    on left: 3 4 5, on right: 2
expr (25)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21,
    on right: 3 7 9 10 11 12 13 14 15 16 17 18 19 20 21


state 0

    $default	reduce using rule 1 (lines)

    lines	go to state 1



state 1

    lines  ->  lines . stmt   (rule 2)

    $   	go to state 42
    error	shift, and go to state 2
    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '?' 	shift, and go to state 6
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    stmt	go to state 10
    expr	go to state 11



state 2

    stmt  ->  error . ENDOFLINE   (rule 5)

    ENDOFLINE	shift, and go to state 12



state 3

    expr  ->  INUM .   (rule 6)

    $default	reduce using rule 6 (expr)



state 4

    expr  ->  ID .   (rule 8)
    expr  ->  ID . ASSIGN expr   (rule 21)

    ASSIGN	shift, and go to state 13

    $default	reduce using rule 8 (expr)



state 5

    expr  ->  FUNC . '(' expr ')'   (rule 7)

    '(' 	shift, and go to state 14



state 6

    stmt  ->  '?' . ENDOFLINE   (rule 4)

    ENDOFLINE	shift, and go to state 15



state 7

    expr  ->  '-' . expr   (rule 18)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 16



state 8

    expr  ->  NOT . expr   (rule 19)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 17



state 9

    expr  ->  '(' . expr ')'   (rule 20)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 18



state 10

    lines  ->  lines stmt .   (rule 2)

    $default	reduce using rule 2 (lines)



state 11

    stmt  ->  expr . ENDOFLINE   (rule 3)
    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)

    ENDOFLINE	shift, and go to state 19
    OR  	shift, and go to state 20
    AND 	shift, and go to state 21
    '<' 	shift, and go to state 22
    '>' 	shift, and go to state 23
    '=' 	shift, and go to state 24
    '+' 	shift, and go to state 25
    '-' 	shift, and go to state 26
    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28



state 12

    stmt  ->  error ENDOFLINE .   (rule 5)

    $default	reduce using rule 5 (stmt)



state 13

    expr  ->  ID ASSIGN . expr   (rule 21)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 29



state 14

    expr  ->  FUNC '(' . expr ')'   (rule 7)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 30



state 15

    stmt  ->  '?' ENDOFLINE .   (rule 4)

    $default	reduce using rule 4 (stmt)



state 16

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)
    expr  ->  '-' expr .   (rule 18)


    $default	reduce using rule 18 (expr)



state 17

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)
    expr  ->  NOT expr .   (rule 19)


    $default	reduce using rule 19 (expr)



state 18

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)
    expr  ->  '(' expr . ')'   (rule 20)

    OR  	shift, and go to state 20
    AND 	shift, and go to state 21
    '<' 	shift, and go to state 22
    '>' 	shift, and go to state 23
    '=' 	shift, and go to state 24
    '+' 	shift, and go to state 25
    '-' 	shift, and go to state 26
    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    ')' 	shift, and go to state 31



state 19

    stmt  ->  expr ENDOFLINE .   (rule 3)

    $default	reduce using rule 3 (stmt)



state 20

    expr  ->  expr OR . expr   (rule 16)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 32



state 21

    expr  ->  expr AND . expr   (rule 17)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 33



state 22

    expr  ->  expr '<' . expr   (rule 13)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 34



state 23

    expr  ->  expr '>' . expr   (rule 14)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 35



state 24

    expr  ->  expr '=' . expr   (rule 15)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 36



state 25

    expr  ->  expr '+' . expr   (rule 9)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 37



state 26

    expr  ->  expr '-' . expr   (rule 10)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 38



state 27

    expr  ->  expr '*' . expr   (rule 11)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 39



state 28

    expr  ->  expr '/' . expr   (rule 12)

    INUM	shift, and go to state 3
    ID  	shift, and go to state 4
    FUNC	shift, and go to state 5
    '-' 	shift, and go to state 7
    NOT 	shift, and go to state 8
    '(' 	shift, and go to state 9

    expr	go to state 40



state 29

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)
    expr  ->  ID ASSIGN expr .   (rule 21)

    OR  	shift, and go to state 20
    AND 	shift, and go to state 21
    '<' 	shift, and go to state 22
    '>' 	shift, and go to state 23
    '=' 	shift, and go to state 24
    '+' 	shift, and go to state 25
    '-' 	shift, and go to state 26
    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28

    $default	reduce using rule 21 (expr)



state 30

    expr  ->  FUNC '(' expr . ')'   (rule 7)
    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)

    OR  	shift, and go to state 20
    AND 	shift, and go to state 21
    '<' 	shift, and go to state 22
    '>' 	shift, and go to state 23
    '=' 	shift, and go to state 24
    '+' 	shift, and go to state 25
    '-' 	shift, and go to state 26
    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28
    ')' 	shift, and go to state 41



state 31

    expr  ->  '(' expr ')' .   (rule 20)

    $default	reduce using rule 20 (expr)



state 32

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr OR expr .   (rule 16)
    expr  ->  expr . AND expr   (rule 17)

    '<' 	shift, and go to state 22
    '>' 	shift, and go to state 23
    '=' 	shift, and go to state 24
    '+' 	shift, and go to state 25
    '-' 	shift, and go to state 26
    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28

    $default	reduce using rule 16 (expr)



state 33

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)
    expr  ->  expr AND expr .   (rule 17)

    '<' 	shift, and go to state 22
    '>' 	shift, and go to state 23
    '=' 	shift, and go to state 24
    '+' 	shift, and go to state 25
    '-' 	shift, and go to state 26
    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28

    $default	reduce using rule 17 (expr)



state 34

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr '<' expr .   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)

    '=' 	shift, and go to state 24
    '+' 	shift, and go to state 25
    '-' 	shift, and go to state 26
    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28

    $default	reduce using rule 13 (expr)



state 35

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr '>' expr .   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)

    '=' 	shift, and go to state 24
    '+' 	shift, and go to state 25
    '-' 	shift, and go to state 26
    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28

    $default	reduce using rule 14 (expr)



state 36

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr '=' expr .   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)

    '+' 	shift, and go to state 25
    '-' 	shift, and go to state 26
    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28

    $default	reduce using rule 15 (expr)



state 37

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr '+' expr .   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)

    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28

    $default	reduce using rule 9 (expr)



state 38

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr '-' expr .   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)

    '*' 	shift, and go to state 27
    '/' 	shift, and go to state 28

    $default	reduce using rule 10 (expr)



state 39

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr '*' expr .   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)


    $default	reduce using rule 11 (expr)



state 40

    expr  ->  expr . '+' expr   (rule 9)
    expr  ->  expr . '-' expr   (rule 10)
    expr  ->  expr . '*' expr   (rule 11)
    expr  ->  expr . '/' expr   (rule 12)
    expr  ->  expr '/' expr .   (rule 12)
    expr  ->  expr . '<' expr   (rule 13)
    expr  ->  expr . '>' expr   (rule 14)
    expr  ->  expr . '=' expr   (rule 15)
    expr  ->  expr . OR expr   (rule 16)
    expr  ->  expr . AND expr   (rule 17)


    $default	reduce using rule 12 (expr)



state 41

    expr  ->  FUNC '(' expr ')' .   (rule 7)

    $default	reduce using rule 7 (expr)



state 42

    $   	go to state 43



state 43

    $default	accept
